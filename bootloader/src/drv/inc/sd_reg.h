#ifndef __SDDC_REGISTER_MAP
#define __SDDC_REGISTER_MAP

#define EMMC_BASE      0x06000000
#define EMMC_REG_BASE   EMMC_BASE

#define rEMMC_PROG  (EMMC_REG_BASE + 0x0)
#define rEMMC_OCR   (EMMC_REG_BASE + 0x4)
#define rEMMC_CSD_ADDR  (EMMC_REG_BASE + 0x8)
#define rEMMC_CSD_DWORD0 (EMMC_REG_BASE + 0x8)
#define rEMMC_CID_ADDR  (EMMC_REG_BASE + 0x18)
#define rEMMC_CARD_STAT    (EMMC_REG_BASE + 0x28)

#define rEMMC_CAPACITY  (EMMC_REG_BASE + 0x34)
#define rEMMC_INT1_EN   (EMMC_REG_BASE + 0x38)
#define rEMMC_INT1_STAT   (EMMC_REG_BASE + 0x3C)
#define rEMMC_MEM_MGMT  (EMMC_REG_BASE + 0x40)
#define rEMMC_ARG  (EMMC_REG_BASE + 0x44) //RO
#define rEMMC_DMA_ADDR  (EMMC_REG_BASE + 0x48)
#define rEMMC_RDYBLK_CNT   (EMMC_REG_BASE + 0x4C)
#define rEMMC_PWD_ADDR   (EMMC_REG_BASE + 0x50)

#define rEMMC_BLK_LEN   (EMMC_REG_BASE + 0x70) //RO
#define rEMMC_SET_BLK_CNT  (EMMC_REG_BASE + 0x74) //RO
#define rEMMC_ERASE_START   (EMMC_REG_BASE + 0x78) //RO
#define rEMMC_ERASE_END   (EMMC_REG_BASE + 0x7C) //RO
#define rEMMC_WP_ADDR   (EMMC_REG_BASE + 0x80) //RO
#define rEMMC_CLR_WP_ADDR   (EMMC_REG_BASE + 0x84) //RO

#define rEMMC_HWRST_CNT     (EMMC_REG_BASE + 0x8C)
#define rEMMC_DMACOMP_CNT   (EMMC_REG_BASE + 0x90) //RO
#define rEMMC_UPD_EXTCSD   (EMMC_REG_BASE + 0x94) //RO
#define rEMMC_BOOT_BLK_CNT  (EMMC_REG_BASE + 0x98)
#define rEMMC_INT2_EN   (EMMC_REG_BASE + 0x9C)
#define rEMMC_INT2_STAT   (EMMC_REG_BASE + 0xA0)
#define rEMMC_EXTCSD_ADDR  (EMMC_REG_BASE + 0xA4)

#define EMMC_IP_51

#ifdef EMMC_IP_51
#define rEMMC_PWD_LEN   (EMMC_REG_BASE + 0x240)
#define rEMMC_PWR_UP   (EMMC_REG_BASE + 0x244)
#define rEMMC_PKT_CNT  (EMMC_REG_BASE + 0x254)
#define rEMMC_TIMING    (EMMC_REG_BASE + 0x258)
#define rEMMC_QSR       (EMMC_REG_BASE + 0x268)
#define rEMMC_READ_FIFO       (EMMC_REG_BASE + 0x26C)
#else
#define rEMMC_PWD_LEN   (EMMC_REG_BASE + 0x18C)
#define rEMMC_PWR_UP   (EMMC_REG_BASE + 0x190)
#define rEMMC_TIMING    (EMMC_REG_BASE + 0x1A4)
#endif

#define rEMMC_LP_INTR1_EN	(EMMC_REG_BASE + 0x2A8)
#define rEMMC_LP_INTR2_EN	(EMMC_REG_BASE + 0x2AC)
#define rEMMC_LP_INTR3_EN	(EMMC_REG_BASE + 0x2B0)
#define rEMMC_SEC_INTR_EN	(EMMC_REG_BASE + 0x2B4)

#define rEMMC_LP_EN_REG		(EMMC_REG_BASE + 0x2B8)
#define rEMMC_LP_CLR_REG	(EMMC_REG_BASE + 0x2BC)

#define rEEC_MIX_CONTROL	(EMMC_REG_BASE + 0x2C0)

#define EMMC_STATE_IDLE (0)
#define EMMC_STATE_READY (1)
#define EMMC_STATE_IDENT (2)
#define EMMC_STATE_STBY (3)
#define EMMC_STATE_TRANS (4)
#define EMMC_STATE_DATA (5)
#define EMMC_STATE_RCV (6)
#define EMMC_STATE_PRG (7)
#define EMMC_STATE_DIS (8)
#define EMMC_STATE_BTST (9)
#define EMMC_STATE_SLP (10)
#define ACC_TYPE_SETBIT (1)
#define ACC_TYPE_CLRBIT (2)
#define ACC_TYPE_WRBIT (3)
#define SWITCH_IDX_SHIFT (16)
#define SWITCH_IDX_MASK (0xFF)
#define SWITCH_ACC_SHIFT (24)
#define SWITCH_ACC_MASK (0xFF)

/*******Configure eMMC Device**********/
#define PROG_IS_SD BIT(0)
#define PROG_IS_EMMC BIT(1)
#define PROG_BUSY_EXT BIT(3)
#define PROG_ILLEGAL_OWNRCACMD7 BIT(4)
#define PROG_PROTO_PARTI_EN BIT(5)
#define PROG_ONEFIFO_BUSY BIT(6)
#define PROG_CRC_CMD2627 BIT(8)
#define PROG_CRC_WPCMD24 BIT(9)
#define PROG_CRC_WPCMD25 BIT(10)
#define PROG_CRC_PKDCMDERR_SHIFT (11)
#define PROG_CRC_PKDCMDERR_MASK (0x3)
#define PROG_RCA0_VALID BIT(13)
#define PROG_SWIT_HWERR_DIS BIT(15)
#define PROG_NO_INACT BIT(16)
#define PROG_BKOPEN_RSVDBITS_HWERR_DIS BIT(17)
#define PROG_PKDCMD_ALT BIT(18)
#define PROG_RTL_REV_SHIFT (19)
#define PROG_RTL_REV_MASK (0x1FFF)

//#define OCR_DEF_VALUE (0x40FF8080)
#define OCR_DEF_VALUE (0x00FF8000)
#define OCR_DEF_18V (0x00000080)
#define OCR_DEF_33V (0x01FF8000)
#define OCR_SECMODE_18V (0x40000080)
#define OCR_SECMODE_33V (0x41FF8000)

#define CSD_RWBYTE_MASK (0x000000FF)

/******Card State, Fw Read Only*******/
#define CARDSTAT_MASK (0xF)
#define CARDSTAT_FIFO0_EMPTY BIT(4)
#define CARDSTAT_FIFO1_EMPTY BIT(5)
#define CARDSTAT_FIFO0_FULL BIT(6)
#define CARDSTAT_FIFO1_FULL BIT(7)
#define CARDSTAT_DEF_SPD BIT(13)

#define INT1_CMD27 BIT(0)
#define INT1_CMD26 BIT(1)
#define INT1_CMD23 BIT(2)
#define INT1_CMD12 BIT(3)
#define INT1_GO_IDLE BIT(4) //CMD0
#define INT1_CMD15 BIT(5)
#define INT1_CMD16 BIT(6)
#define INT1_RCMD BIT(10)
#define INT1_WCMD BIT(11)
#define INT1_WRITE_COMP BIT(12)
#define INT1_READ_COMP BIT(13)
#define INT1_CMD8 BIT(14)
#define INT1_CMD35 BIT(18)
#define INT1_CMD36 BIT(19)
#define INT1_CMD38 BIT(20)
#define INT1_FORCE_ERASE BIT(21) //CMD42
#define INT1_SET_PWD BIT(22) //CMD42
#define INT1_CLR_PWD BIT(23) //CMD42
#define INT1_LOCK BIT(24) //CMD42
#define INT1_UNLOCK BIT(25) //CMD42
#define INT1_CMD28 BIT(26)
#define INT1_CMD29 BIT(27)
#define INT1_CMD30 BIT(28)
#define INT1_CMD56 BIT(29)
#define INT1_BLKCNT_INVALID BIT(30)
#define INT1_MULTI_RW BIT(31)

#define INT2_BOOT_START BIT(0) //for original and alternative
#define INT2_BOOT_STOP BIT(1) // only for original
#define INT2_SLEEP BIT(2)
#define INT2_AWAKE BIT(3)
#define INT2_BKOP_START BIT(4)
#define INT2_HPI BIT(5) //CMD12/13 with HPI
#define INT2_DATA_CRCERR BIT(6)
#define INT2_CMD_CRCERR BIT(7)
#define INT2_CMD12 BIT(8)
#define INT2_SELECT BIT(9) //CMD7
#define INT2_DESELECT BIT(10) // CMD7
#define INT2_SANITIZE BIT(11)
#define INT2_FLUSH_CACHE BIT(12)
#define INT2_TCASE_SPT BIT(13)
#define INT2_CMD23_PKD BIT(14)
#define INT2_CMD49 BIT(15)
#define INT2_CMD31 BIT(16)
#define INT2_PARTI_SET_COMP BIT(17)
#define INT2_EXTCSD_UPD BIT(18)
#define INT2_HWRST BIT(19)
#define INT2_GO_PRE_IDLE BIT(20) //CMD0
#define INT2_PKDCMD_COMP BIT(21)
#define INT2_PKDCMD_ERR BIT(22)
#define INT2_CARD_STAT_CHANGE BIT(23)
#define INT2_CMD53 BIT(24)
#define INT2_CMD54 BIT(25)
#define INT2_PWD_LEN_ERR BIT(26)
#define INT2_CMD1 BIT(27)

/*******FW Set to trigger next Operation********/
#define MEMGMT_NOERR BIT(0)
#define MEMGMT_PROGERR BIT(1)
#define MEMGMT_GENERR BIT(2)
#define MEMGMT_OVERMAXLBAERR BIT(3)
#define MEMGMT_MISALIGNERR BIT(4)
#define MEMGMT_TRANSCOMP BIT(5) //set after pwd,CSD,CID Updation ,erase, force erase, sleep_awake, usually with Bit(0)
#define MEMGMT_BOOTCOMP BIT(6)
#define MEMGMT_WPVIOLAT BIT(7)
#define MEMGMT_ERASEPARAMERR BIT(8)
#define MEMGMT_WPERASESKIP BIT(9)
#define MEMGMT_ECCFAIL BIT(10)
#define MEMGMT_SWITERR BIT(12)
#define MEMGMT_EXCEPEVENT BIT(13)
#define MEMGMT_LOCKERR BIT(15)
#define MEMGMT_PRELOADDONE BIT(16)

#define BLK_CNT_MASK (0x0000FFFF)

#define SETBLKCNT_FUA BIT(24)
#define SETBLKCNT_CONTEXTID_SHIFT (25)
#define SETBLKCNT_CONTEXTID_MASK (0xF)
#define SETBLKCNT_TAGREQ BIT(29)
#define SETBLKCNT_PKDCMD BIT(30)
#define SETBLKCNT_RELW BIT(31)

#define HWRSTCNT_CNT_MASK (0x7F)

#define DEF_BOOT_BLK_CNT (0x10)

#define UPD_EXTCSD_VAL_MASK (0xFF)

#define PWD_LEN_MASK (0x1F)
#define MAX_PWD_BYTE_CNT (16)
#define MAX_PWD_DWORD_CNT (4)

#define PWRUP_RESP_CMD8_EN BIT(0)
#define PWRUP_ACCMODE_CHK_DIS BIT(1) // only valid when Device is Sector Mode while Host is Sector Mode
#define PWRUP_RESP_CMD1_EN BIT(2)
#define PWRUP_VLO_CHK_EN BIT(3)
#define PWRUP_SWITCH_FUN0_EN BIT(5)
#define PWRUP_CONFIG_FUN0_LOW_EN BIT(6)
#define PWRUP_CONFIG_FUN0_HIGH_EN  BIT(7)

#define CMD6_SWITCH_DEF_SDR12	BIT(0)
#define CMD6_SWITCH_HS_SDR25	BIT(1)
#define CMD6_SWITCH_SDR50	BIT(2)
#define CMD6_SWITCH_SDR104	BIT(3)
#define CMD6_SWITCH_DDR50	BIT(4)

#define TIMING_NAC_NONHS200_SHIFT (0)
#define TIMING_NAC_MASK (0xF)
#define TIMING_NAC_HS200_SHIFT (4)
#define TIMING_NCR_SHIFT (8)
#define TIMING_NCR_MASK (0x3F)
#define TIMING_NCRC_SHIFT (16)
#define TIMING_NCRC_MASK (0x7)

#define EMMC_RAMDISK_CAP (64)

#define MMC_INT1_MASK 					(0xFFFFFFFF)
#define MMC_INT2_MASK 					(0x0FFFFEFF) // Ignore Int2_Stop

#endif
